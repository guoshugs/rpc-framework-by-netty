先规划client的涉及细节及提供的方法：
    client底层使用netty作为传输层，使用json作为消息发送的形式，提供发送消息的功能，且发送消息支持并发
再实现netty传输通道的处理，每条通道内部使用同步，处理如何发消息、如何收消息的逻辑
框架为了便于终端用户使用，不能让用户每调用一次，都发一次消息，要像local调用本地方法一样，所以使用代理给provider发消息
每个方法都有一个代理，要抽象出一个代理类，可以根据调用的本地方法来获得对应的代理对象，让特定的代理对象代理客户端发送特定的消息
    代理类内部根据调用的不同方法新建不同的代理对象，封装适当的消息request
有了代理就要给终端使用者的类使用，为了方便使用，使用注解注入的方式让用户使用
    所以要定义注解，再让应用类打上注解，再让上面的代理注入给应用类
将代理作为应用类的属性值，就能实现注入了！那就把所有的应用类都拦截一下，过一下容器的Bean处理器就能实现拦截
    通过反射获得打了注解的属性，反射赋值，就实现了注入！

